<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.example.service"/>

    <bean id="theLogger" class="com.example.util.Logger"/>
    <aop:config>
        <!--<aop:pointcut id="pc1" expression="execution(* com.example.service.impl.*.*(..))"/>-->
        <aop:pointcut id="pc2" expression="execution(* com.example.service.impl.*.saveAccount(..))"/>
        <aop:pointcut id="pc3" expression="execution(* com.example.service.impl.*.deleteAccount(..))"/>
        <aop:aspect id="logAspect" ref="theLogger">
            <aop:before method="beforeAdvice" pointcut-ref="pc2"/>
            <aop:after-returning method="afterReturningAdvice" pointcut-ref="pc2"/>
            <aop:after-throwing method="afterThrowingAdvice" pointcut-ref="pc2"/>
            <aop:after method="afterAdvice" pointcut-ref="pc2"/>
            <aop:around method="aroundAdvice" pointcut-ref="pc3" />
        </aop:aspect>
    </aop:config>

</beans>